authentik:
  secret_key: "" # we grab this from the environment
  error_reporting:
    enabled: false

ingress:
  enabled: true
  ingressClassName: nginx
  hosts:
    - host: &domain authentik.prod.adamland.xyz
      paths:
        - path: "/"
          pathType: Prefix
  tls:
    - secretName: authentik-ui-tls
      hosts: [*domain]

  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

postgresql:
  enabled: false
redis:
  enabled: true

envFrom:
- configMapRef:
    name: authentik-config
- secretRef:
    name: authentik-secret-key
envValueFrom:
  AUTHENTIK_POSTGRESQL__HOST:
    secretKeyRef:
      name: pg-app # generated by cnpg's postgres cluster custom resource
      key: host
  AUTHENTIK_POSTGRESQL__PORT:
    secretKeyRef:
      name: pg-app # generated by cnpg's postgres cluster custom resource
      key: port
  AUTHENTIK_POSTGRESQL__NAME:
    secretKeyRef:
      name: pg-app # generated by cnpg's postgres cluster custom resource
      key: dbname
  AUTHENTIK_POSTGRESQL__USER:
    secretKeyRef:
      name: pg-app # generated by cnpg's postgres cluster custom resource
      key: username
  AUTHENTIK_POSTGRES__PASSWORD:
    secretKeyRef:
      name: pg-app # generated by cnpg's postgres cluster custom resource
      key: password
  POSTGRES_PASSWORD:
    secretKeyRef:
      name: pg-app # generated by cnpg's postgres cluster custom resource
      key: password

# Path to x509 client certificate to authenticate to server
#AUTHENTIK_POSTGRESQL__SSLCERT:
#AUTHENTIK_POSTGRESQL__SSLKEY:

volumes:
  - name: root-cert
    secret:
      secretName: pg-ca
      items:
      - key: ca.crt
        path: root.crt
  - name: tls-cert
    secret:
      secretName: authentik-ui-tls
      defaultMode: 0644
      items:
      - key: tls.crt
        path: tls.crt
      - key: tls.key
        path: tls.key

volumeMounts:
  - name: root-cert
    mountPath: /authentik/.postgresql/
    readOnly: true
  - name: tls-cert
    mountPath: /certs
    readOnly: true

autoscaling:
  server:
    enabled: true
    minReplicas: 2
    maxReplicas: 3
  worker:
    enabled: true
    minReplicas: 2
    maxReplicas: 3

pdb:
  server:
    enabled: true
    maxUnavailable: 1
  worker:
    enabled: true
    maxUnavailable: 1